{"meta":{"title":"守城的小兵","subtitle":null,"description":null,"author":"Lin XiaoBin","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2019-08-22T09:46:15.579Z","updated":"2019-08-22T09:46:15.579Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"friends","date":"2019-08-15T14:09:54.000Z","updated":"2019-08-15T14:09:54.861Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":""},{"title":"","date":"2019-08-15T14:10:41.628Z","updated":"2019-08-15T14:10:41.628Z","comments":true,"path":"list/index.html","permalink":"http://yoursite.com/list/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2019-08-15T14:07:51.779Z","updated":"2019-08-15T14:07:51.779Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2019-08-15T14:10:24.792Z","updated":"2019-08-15T14:10:24.792Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"PHP面试基础问答题","slug":"8","date":"2019-08-23T01:43:08.000Z","updated":"2019-08-23T01:45:40.045Z","comments":true,"path":"2019/08/23/8/","link":"","permalink":"http://yoursite.com/2019/08/23/8/","excerpt":"你知道哪些设计模式，六大原则是什么？常用的设计模式 单例模式 工厂模式 观察者模式 依赖注入","text":"你知道哪些设计模式，六大原则是什么？常用的设计模式 单例模式 工厂模式 观察者模式 依赖注入 六大原则 单一职责原则 里氏替换原则 依赖倒置原则 接口隔离原则 迪米特法则 开闭原则 Redis有哪些数据类型？，redis数据存储/持久化的方式有哪些？数据类型 字符串 key-value 列表 list 哈希 hash 集合 set 有序集合 sort set 数据存储方式 快照持久化(RDB) 将Redis某一时刻存在的所有数据都写入硬盘。 AOF持久化 当使用AOF持久化方式的时候，Redis执行写命令的时候，将被执行的写命令复制到硬盘里面，说的通俗一点就是写日志。 PHP这些框架是怎么实现文件自动加载的？__autoload()在 PHP5 中，若我们使用一个没有加载的类，PHP 会自动运行 __autoload() 函数。因此，我们可以对 __autoload() 进行自定义，从而完成类的加载。 spl_autoload_register()spl_autoload_register()会自动先调用spl_autoload()在路径中查找具有小写文件名的”.php”程序.默认查找的扩展名还有”.ini”,还可以用spl_autoload_extenstions()注册扩展名. composer什么是TCP？用语言描述下三次握手， 用一些语言来实现TCP的过程个人对TCP的理解 TPC/IP协议是传输层协议，主要解决数据如何在网络中传输 TCP是属于全双工的通讯 TCP连接需要进行三次握手 三次握手描述 第一次握手：客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认; 服务器收到syn包，必须确认客户的SYN(ack=j+1)，同时自己也发送一个SYN包(syn=k)，即SYN+ACK包，此时服务器进入SYN_RECV状态; 第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。","categories":[{"name":"PHP","slug":"PHP","permalink":"http://yoursite.com/categories/PHP/"}],"tags":[{"name":"php","slug":"php","permalink":"http://yoursite.com/tags/php/"}]},{"title":"Centos7控制端口","slug":"7","date":"2019-08-23T01:38:02.000Z","updated":"2019-08-23T01:42:06.098Z","comments":true,"path":"2019/08/23/7/","link":"","permalink":"http://yoursite.com/2019/08/23/7/","excerpt":"关闭防火墙 网上的大部分资料都是用iptables防火墙的，但是阿里云的centos 7默认防火墙是firewall。最为简单的方法其实就是关闭我们的防火墙： 查看下防火墙的状态：systemctl status firewalld 关闭防火墙：systemctl stop firewalld 这样就解决了，在访问下ip地址:端口号就可以看到所写的应用啦！但是这样的问题是很不安全，其实可以将firewall服务禁用，应用iptables服务（网上大部分启用端口的资料都是基于iptables服务）。","text":"关闭防火墙 网上的大部分资料都是用iptables防火墙的，但是阿里云的centos 7默认防火墙是firewall。最为简单的方法其实就是关闭我们的防火墙： 查看下防火墙的状态：systemctl status firewalld 关闭防火墙：systemctl stop firewalld 这样就解决了，在访问下ip地址:端口号就可以看到所写的应用啦！但是这样的问题是很不安全，其实可以将firewall服务禁用，应用iptables服务（网上大部分启用端口的资料都是基于iptables服务）。 安装iptables 由于没有防火墙会造成不安全，所以给服务器安装一应用更广的防火墙iptable 首先要禁用firewall，通过yum安装iptables： 12systemctl disable firewalldyum install -y iptables-services 启动iptables 1systemctl start iptables 启动后可以通过systemctl status iptables查看状态。 更改iptables规则 将iptables文件备份下： 1cp -a /etc/sysconfig/iptables /etc/sysconfig/iptables.bak 设置 INPUT 方向所有的请求都拒绝 1iptables -P INPUT DROP 放开所需端口 123iptables -I INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPTiptables -I INPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT iptables -I INPUT -p tcp --dport 443 -m state --state NEW -j ACCEPT 保存规则 1iptables-save &gt; /etc/sysconfig/iptables 设置为开机启动并且重启 12systemctl enable iptables.servicesystemctl reboot","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"centos","slug":"centos","permalink":"http://yoursite.com/tags/centos/"}]},{"title":"不停止MySQL服务，修复数据库主从复制不一致的错误","slug":"6","date":"2019-08-23T01:35:27.000Z","updated":"2019-08-23T01:36:20.141Z","comments":true,"path":"2019/08/23/6/","link":"","permalink":"http://yoursite.com/2019/08/23/6/","excerpt":"当你的线上环境部署了Mysql主从复制的时候，如果主库出现异常，例如断电，或者误操作删除了master-bin二进制文件，导致了从数据库跟主数据库数据不一致。以下的步骤可以让你在不停止业务的情况下，对主从不一致进行修复","text":"当你的线上环境部署了Mysql主从复制的时候，如果主库出现异常，例如断电，或者误操作删除了master-bin二进制文件，导致了从数据库跟主数据库数据不一致。以下的步骤可以让你在不停止业务的情况下，对主从不一致进行修复 一、先清除现在的主从复制关系 清除从库的主从信息 进入从库 1234567891011mysql&gt;stop slave;QueryOK, 0 rowsaffected (0,00 sec)mysql&gt;reset slave all;QueryOK, 0 rowsaffected (0,04 sec)mysql&gt; show slave status\\GEmptyset (0,00 sec) 当使用 show slave status\\G 显示 Emptyset 的时候，说明清除成功 重置主库的二进制文件 进入主库 1234567891011mysql&gt; reset master;Query OK, 0 rows affected (0.03 sec)mysql&gt; show master status\\G;*************************** 1. row *************************** File: master-bin.000001 Position: 107 Binlog_Do_DB: Binlog_Ignore_DB: 1 row in set (0.00 sec) 显示所有的binlog已被删除，且binlog从000001 开始记录 二、 准备工具 mysqldump如果你是第一次使用mysqldump，那么可能会出现mysqldump: command not found的错误提示 解决办法：ln -s /usr/local/mysql/bin/mysql /usr/bin 安装mysql数据库会自带mysqldump命令，你只需要把mysqldump的命令用软连接的方式放到/usr/bin目录下，即可全局使用 三、备份主库数据库1mysqldump -uroot -proot --routines --single_transaction --master-data=2 --databases db &gt; db.sql 如果你需要备份多个数据库到一个sql文件上, 只需要在db后面加上 db2，db3… –routines：导出存储过程和函数 –single_transaction：导出开始时设置事务隔离状态，并使用一致性快照开始事务，然后unlock tables;而lock-tables是锁住一张表不能写操作，直到dump完毕。 –master-data：默认等于1，将dump起始（change master to）binlog点和pos值写到结果中，等于2是将change master to写到结果中并注释。 四、把备份好的sql文件拷贝到从库使用scp远程复制的方式，可以增加传输效率，如果sql文件过大，推荐使用scp scp weibo.sql root@192.0.0.2:/home 或者使用rz命令下载sql到本地，在使用sz命令上传到从库（不推荐），只适合小文件传输 五、清空从库旧数据，重新导入主库的备份文件进入mysql终端，选择数据库 source /home/db.sql 等待导入完成 在备份文件db.sql查看binlog和pos值head -25 db.sql 找到如下信息 – CHANGE MASTER TO MASTER_LOG_FILE=’master-bin.000001’, MASTER_LOG_POS=224598557; 六、从库设置从这个日志点同步，并启动1change master to master_host=&apos;192.0.0.1&apos;,master_port=3306,master_user=&apos;repl&apos;,master_password=&apos;repl&apos;, master_log_file=&apos;master-bin.000001&apos;,master_log_pos=224598557; 七、检查主从是否生效show slave status\\G; 12345678910111213*************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 172.18.132.110 Master_User: repl Master_Port: 3306 Connect_Retry: 60 Master_Log_File: master-bin.000001 Read_Master_Log_Pos: 306231208 Relay_Log_File: slave-relay-bin.000002 Relay_Log_Pos: 11831037 Relay_Master_Log_File: master-bin.000001 Slave_IO_Running: Yes Slave_SQL_Running: Yes 如果Slave_IO_Running 和 Slave_SQL_Running 都为Yes，说明同步成功，主从正常运行","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://yoursite.com/categories/Mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"Mysql解决日志的时间与系统时间不一致的问题","slug":"5","date":"2019-08-23T01:33:31.000Z","updated":"2019-08-23T01:34:19.352Z","comments":true,"path":"2019/08/23/5/","link":"","permalink":"http://yoursite.com/2019/08/23/5/","excerpt":"1SHOW GLOBAL VARIABLES LIKE &apos;log_timestamps&apos;; Variable_name Value log_timestamps UTC mysql安装后error_log,slow_log 日志时间戳默认为UTC 解决办法：","text":"1SHOW GLOBAL VARIABLES LIKE &apos;log_timestamps&apos;; Variable_name Value log_timestamps UTC mysql安装后error_log,slow_log 日志时间戳默认为UTC 解决办法： 不重启mysql进行设置1set global log_timestamps=SYSTEM; 进行 在my.conf文件的[mysqld] 中，加入1log_timestamps=SYSTEM 重启mysql之后再次查看log_timestamps属性。 为了防止重启服务之后，配置失效，建议在进行set global log_timestamps=SYSTEM; 的设置之后，同步在my.conf也保存相应的配置","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://yoursite.com/categories/Mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"Centos7 配置 mysql5.7主从复制","slug":"4","date":"2019-08-23T01:31:58.000Z","updated":"2019-08-23T01:32:56.443Z","comments":true,"path":"2019/08/23/4/","link":"","permalink":"http://yoursite.com/2019/08/23/4/","excerpt":"第一步，环境准备 主数据库：Centos 7.0 + Mysql 5.7.24 从数据库：Centos 7.0 + Myswl 5.7.24","text":"第一步，环境准备 主数据库：Centos 7.0 + Mysql 5.7.24 从数据库：Centos 7.0 + Myswl 5.7.24 主数据库配置 使用vim编辑器打开my.cnf配置文件，vi /etc/my.cnf 在[mysqld]中加入如下参数 12345server-id=1 //设置服务器唯一标识log-bin=master-bin // 开启mysql二进制文件日志，用于从数据库同步数据的凭证log_bin_index=master-bin.indexbinlog_do_db=weicp // 指定同步的数据库binlog_ignore_db=mysql // 不记录二进制日志的数据库 保存配置，重启mysql服务 查看是否生效使用 mysql -u root -p 进入mysql终端使用show master status查看配置是否生效，如果生效，会得到File跟Position 两个参数值。 主库创建同步账号 进入mysql终端 mysql&gt; grant replication slave on *.* to &#39;repl&#39;@&#39;192.168.18.%&#39; identified by &#39;repl&#39;; 从数据库配置 使用vim打开从数据库的配置文件，vi /etc/my.cnf 在[mysqld]中加入如下参数 123server-id = 2 //从服务器唯一标识符relay-log = slave-relay-bin //从服务器二进制日志relay-log-index = slave-relay-bin.index 重启mysql 使用 mysql -u root -p 进去mysql终端 执行下面的命令 1change master to master_host=&apos;192.168.33.10&apos;,master_port=3306,master_user=&apos;repl&apos;,master_password=&apos;repl&apos;, master_log_file=&apos;master-bin.000001&apos;,master_log_pos=10157; 上面的命令是指定从数据使用repl用户，远程登录192.168.33.10的主数据库，同步主二进制日志文件master-bin.000001,，master_log_pos是主数据库的Position, master_log_file是主数据库的File值。 命令生效之后启动slave，start slave 启动slave可能会报出The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work.这样的错误，那是因为主从数据库的uuid相同导致的。 解决的方法就是找到数据库文件的存放路径（注:不是mysql安装目录）例如/data/mysql里面的auto.cnf，把其中一个数据库的uuid值改掉，在启动slave就可以了。 注意事项 保证主从数据库的 max_allowed_packet 参数配置一致，可以使用 show variables like &#39;max_allowed_packet&#39;; 进行查看","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://yoursite.com/categories/Mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"Mysql开启查询缓存","slug":"3","date":"2019-08-23T01:30:30.000Z","updated":"2019-08-23T01:31:10.958Z","comments":true,"path":"2019/08/23/3/","link":"","permalink":"http://yoursite.com/2019/08/23/3/","excerpt":"先查询下当前服务器上的查询缓存是否打开 show variables like &#39;have_query_cache&#39; 12345+------------------+-------+| Variable_name | Value |+------------------+-------+| have_query_cache | NO |+------------------+-------+ 上面表示查询缓存是关闭的，如果变量值为YES的话，表示查询缓存开启","text":"先查询下当前服务器上的查询缓存是否打开 show variables like &#39;have_query_cache&#39; 12345+------------------+-------+| Variable_name | Value |+------------------+-------+| have_query_cache | NO |+------------------+-------+ 上面表示查询缓存是关闭的，如果变量值为YES的话，表示查询缓存开启 若要开启查询缓存，可以在my.cnf中进行配置，打开my.cnf [mysqld] 12345query_cache_type=1query_cache_size=128MBquery_cache_limit=1MB 保存 my.cnf文件，重启mysql服务器 参数说明 query_cache_type 如果 query_cache_type 被设置为 1 ，并且query_cache_size 为 0，则不会分配任何内存空间，此时查询缓存被禁用；如果query_cache_size 的值大于0，那么就开启查询缓存并分配了内存空间； query_cache_size 表示分配的内存空间，内存空间的分配并不是越大越好，设置在100M-200M之间比较合适。 query_cache_limit 定义了能被缓存的查询结果最大体积，超过这个体积的查询将不会被缓存。","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://yoursite.com/categories/Mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"Mysql设置最大连接数，如何合理设置最大连接数","slug":"2","date":"2019-08-23T01:27:22.000Z","updated":"2019-08-23T01:28:59.453Z","comments":true,"path":"2019/08/23/2/","link":"","permalink":"http://yoursite.com/2019/08/23/2/","excerpt":"MySQL服务器的连接数并不是要达到最大的100%为好，还是要具体问题具体分析，下面就对MySQL服务器最大连接数的合理设置进行了详尽的分析，供您参考。","text":"MySQL服务器的连接数并不是要达到最大的100%为好，还是要具体问题具体分析，下面就对MySQL服务器最大连接数的合理设置进行了详尽的分析，供您参考。 我们经常会遇见 1MySQL: ERROR 1040: Too many connections 的情况，一种是访问量确实很高，MySQL服务器抗不住，这个时候就要考虑增加从服务器分散读压力，另外一种情况是MySQL配 置文件中max_connections值过小： 1234567mysql&gt; show variables like &apos;max_connections&apos;;+-----------------+-------+| Variable_name | Value |+-----------------+-------+| max_connections | 256 |+-----------------+-------+ 这台MySQL服务器最大连接数是256 然后查询一下服务器响应的最大连接数 1 mysql&gt; show global status like &apos;Max_used_connections&apos;; Max_used_connections 表示数据库，过去到现在出现过的最大连接数是245，意思就是数据库链接的高峰值是245 很明显，高峰值为245，还没有达到我们最大链接数设置的256，这种情况下，不会出现Too many connections的错误。如果Max_used_connections的值超过max_connections,说明我们设置的最大值已经不满足需求了，需要调整最大链接数。那么调整多少比较合适呢？ 一般情况下，最大连接数占上限连接数的85%左右，如果发现比例在10%以下，MySQL服务器连接上线就设置得过高了。比较理想的设置是： 1 Max_used_connections / max_connections * 100% ≈ 85%","categories":[{"name":"Mysql","slug":"Mysql","permalink":"http://yoursite.com/categories/Mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"HTTP协议状态码，常见状态码以及描述","slug":"1","date":"2019-08-22T09:37:31.000Z","updated":"2019-08-23T01:28:00.217Z","comments":true,"path":"2019/08/22/1/","link":"","permalink":"http://yoursite.com/2019/08/22/1/","excerpt":"简单汇总http状态码大类，并介绍几种常见状态码以及状态码所表示的含义。","text":"简单汇总http状态码大类，并介绍几种常见状态码以及状态码所表示的含义。 状态码大类 1xx：指示信息表示请求已接收，继续处理。 2xx：成功表示请求已被成功接收、理解、接受。 3xx：重定向要完成请求必须进行更进一步的操作。 4xx：客户端错误请求有语法错误或请求无法实现。 5xx：服务器端错误服务器未能实现合法的请求。 常见状态码以及描述 200 OK：客户端请求成功。 400 Bad Request：客户端请求有语法错误，不能被服务器所理解。 401 Unauthorized：请求未经授权，这个状态代码必须和 Authenticate 报头域一起使用。 403 Forbidden：服务器收到请求，但是拒绝提供服务。 404 Not Found：请求资源不存在，举个例子：输入了错误的 URL。 500 Internal - Server Error：服务器发生不可预期的错误。 503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常，举个例子：HTTP/1.1 200 OK（CRLF）。","categories":[{"name":"网络知识","slug":"网络知识","permalink":"http://yoursite.com/categories/网络知识/"}],"tags":[{"name":"http","slug":"http","permalink":"http://yoursite.com/tags/http/"}]}]}